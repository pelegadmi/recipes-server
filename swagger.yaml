tags:
  - name: users
    description: users API
  - name: recipes
    description: recipes API
  - name: graph
    description: graph API
  - name: recipe-comments
    description: recipe-comments API

paths:
# [GET] recipe-comments
  /recipe-comments:
    get:
      tags:
        - recipe-comments
      summary: Find All Recipes' Comments
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [GET] recipe-comments/id
  /recipe-comments/{id}:
    get:
      tags:
        - recipe-comments
      summary: Find recipe's comments By Id
      parameters:
        - name: id
          in: path
          description: recipe Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [POST] recipe-comments/id
    post:
      tags:
        - recipe-comments
      summary: add recipe comment
      parameters:
        - name: id
          in: path
          description: recipe Id
          required: true
        - name: body
          in: body
          description: create user dto
          required: true
          schema:
            $ref: '#/definitions/comment-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] graph
  /graph:
    get:
      tags:
        - graph
      summery: Retrieve number of recipes per user
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: create user dto
        required: true
        schema:
          $ref: '#/definitions/create-user-dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: update user dto
        required: true
        schema:
          $ref: '#/definitions/update-user-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] recipes
  /recipes:
    get:
      tags:
        - recipes
      summary: Find All Recipes
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] recipes
    post:
      tags:
        - recipes
      summary: Add Recipe
      parameters:
        - name: body
          in: body
          description: create Recipe dto
          required: true
          schema:
            $ref: '#/definitions/create-recipe-dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] recipes/id
  /recipes/{id}:
    get:
      tags:
        - recipes
      summary: Find user's recipes By UserId
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] recipe/id
    put:
      tags:
        - recipes
      summary: Update recipe By Id
      parameters:
        - name: id
          in: path
          description: recipe Id
          required: true
        - name: body
          in: body
          description: update recipe dto
          required: true
          schema:
            $ref: '#/definitions/create-recipe-dto'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] recipes/id
    delete:
      tags:
        - recipes
      summary: Delete Recipe By Id
      parameters:
        - name: id
          in: path
          description: recipe Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'



# definitions
definitions:
  create-user-dto:
    type: object
    required:
        - nickname
        - password
        - userType
    properties:
      nickname:
        type: string
        description: user nickname
      password:
        type: string
        description: user password
      userType:
        type: string
        description: user type

  update-user-dto:
    type: object
    required:
      - nickname
      - password
      - userType
    properties:
      nickname:
        type: string
        description: user nickname
      password:
        type: string
        description: user password
      userType:
        type: string
        description: user type

  comment-dto:
    type: object
    required:
      - x
    properties:
      x:
        type: string
        description: comment body

  create-recipe-dto:
    type: object
    required:
      - title
      - image
      - imageType
      - includeIngredients
      - maxReadyTime
      - description
      - firebaseUserId
    properties:
      title:
        type: string
        description: recipe title
      image:
        type: string
        description: recipe image url
      imageType:
        type: string
        description: recipe imageType
      includeIngredients:
        type: array
        items: {}
        description: ingredient objects
      maxReadyTime:
        type: number
        description: prep time
      description:
        type: string
        description: description html block
      firebaseUserId:
        type: string
        description: firebase's autogen id - important

schemes:
 - https
 - http
